<Task>
	<!-- reference task information -->
	<Reference>
		<Author>
			<name>Michal Laszkowski</name>
			<link></link>
		</Author>
		
		<Description>
                        <brief>SOM:ProjectionGroupingTest</brief>
			<full></full>	
		</Description>
	</Reference>
	
	<!-- task definition -->
	<Subtasks>
		<Subtask name="Main">
			<Executor name="Processing"  period="1">
                                <Component name="CameraInfo" type="CvCoreTypes:CameraInfoProvider" priority="1" bump="1">
                                    <param name="width">640</param>
                                    <param name="height">480</param>
                                    <param name="camera_matrix">525 0 319.5 ; 0 525 239.5 ; 0 0 1</param>
                                    <param name="dist_coeffs">0.18126525 -0.39866885 0.00000000 0.00000000 0.00000000</param>
                                </Component>
                                <Component name="SOMJSONReader" type="SIFTObjectModel:SOMJSONReader" priority="2" bump="0">
                                        <param name="filenames">/home/mlaszkow/DCL/TexturedSolidGeneration/data/ahmad1.json</param>
                                </Component>
                                <!--Sequences-->
                                <Component name="NextImageTrigger" type="CvBasic:Trigger" priority="3" bump="0">
                                </Component>
                                <Component name="RGBSequence" type="CvBasic:Sequence" priority="4" bump="0">
                                    <param name="sequence.directory">/home/mlaszkow/DCL/ecovi/data/ahmad/</param>
                                    <param name="sequence.pattern">.*_rgb.png</param>
                                    <param name="mode.loop">1</param>
                                    <param name="mode.auto_next_image">1</param>
                                </Component>
                                <Component name="DepthSequence" type="CvBasic:Sequence" priority="5" bump="0">
                                    <param name="sequence.directory">/home/mlaszkow/DCL/ecovi/data/ahmad/</param>
                                    <param name="sequence.pattern">.*_depth.png</param>
                                    <param name="mode.loop">1</param>
                                    <param name="mode.auto_next_image">1</param>
                                </Component>
                                <!--Processing-->
				<Component name="SIFT" type="CvBasic:CvSIFT" priority="6" bump="0">
				</Component>
				<Component name="Converter" type="PCL:DepthConverter" priority="7" bump="0">
				</Component>
				<Component name="FeatureCloudConverter" type="SIFTObjectModel:FeatureCloudConverter" priority="8" bump="0">
				</Component>
				
				<Component name="SIFTObjectMatcher" type="SIFTObjectModel:SIFTObjectMatcher" priority="9" bump="0">
                                    <param name="cg_size">0.01f</param>
                                    <param name="cg_thresh">9.0f</param>
				</Component>
                                <Component name="Projection" type="SIFTObjectModel:Projection" priority="10" bump="0">
                                </Component>
                                <Component name="GreedyVerification" type="SIFTObjectModel:GreedyVerification" priority="11" bump="5">
                                </Component>
                                <Component name="ConflictGraph" type="SIFTObjectModel:ConflictGraph" priority="12" bump="5">
                                </Component>
                                <Component name="GlobalHypothesesVerification" type="SIFTObjectModel:GlobalHypothesesVerification" priority="13" bump="5">
                                </Component>

                        </Executor>

			<Executor name="Visualization" period="1">
                                <Component name="CorrespondenceViewer" type="Registration:CorrespondenceViewer" priority="101" bump="0">
                                        <param name="coordinate_system">0</param>
                                        <param name="translation.x">-0.05</param>
                                        <param name="translation.y">0</param>
                                        <param name="translation.z">0.05</param>
				</Component>

                        </Executor>
            </Subtask>
	
	</Subtasks>
	
	<!-- pipes connecting datastreams -->
	<DataStreams>
                <Source name="CameraInfo.out_camera_info">
                        <sink>Converter.in_camera_info</sink>
                        <sink>FeatureCloudConverter.in_camera_info</sink>
                </Source>
                <!--Sequences-->
                <Source name="NextImageTrigger.out_trigger">
                        <sink>RGBSequence.in_next_image_trigger</sink>
                        <sink>DepthSequence.in_next_image_trigger</sink>
                </Source>
                <Source name="RGBSequence.out_img">
			<sink>SIFT.in_img</sink>
                        <sink>Converter.in_color</sink>
		</Source>
                <Source name="DepthSequence.out_img">
                        <sink>Converter.in_depth</sink> <!--_xyz-->
                        <sink>FeatureCloudConverter.in_depth</sink>
		</Source>
                <!--Proccesing-->
		<Source name="SIFT.out_descriptors">
			<sink>FeatureCloudConverter.in_descriptors</sink>	
		</Source>
		<Source name="SIFT.out_features">
			<sink>FeatureCloudConverter.in_features</sink>	
		</Source>		
		<Source name="Converter.out_cloud_xyzrgb">
			<sink>SIFTObjectMatcher.in_cloud_xyzrgb</sink>		
		</Source>
		<Source name="FeatureCloudConverter.out_cloud_xyzsift">
			<sink>SIFTObjectMatcher.in_cloud_xyzsift</sink>	
		</Source>
                <!--Read model-->
                <Source name="SOMJSONReader.out_models">
			<sink>SIFTObjectMatcher.in_models</sink>
                </Source>

                <!-- SIFTObjectMatcher -->
		<Source name="SIFTObjectMatcher.out_cloud_xyzrgb">   
                        <sink>CorrespondenceViewer.in_src_cloud_xyzrgb</sink>
                        <sink>Projection.in_cloud_xyzrgb_scene</sink>
                        <sink>GreedyVerification.in_cloud_xyzrgb_scene</sink>
                        <sink>ConflictGraph.in_cloud_xyzrgb_scene</sink>
                        <sink>GlobalHypothesesVerification.in_cloud_xyzrgb_scene</sink>
		</Source>
		<Source name="SIFTObjectMatcher.out_cloud_xyzrgb_model">
                        <sink>Projection.in_cloud_xyzrgb_model</sink>
                        <sink>CorrespondenceViewer.in_trg_cloud_xyzrgb</sink>
		</Source>
		<Source name="SIFTObjectMatcher.out_cloud_xyzsift">

                        <sink>CorrespondenceViewer.in_src_cloud_xyzsift</sink>
		</Source>
		<Source name="SIFTObjectMatcher.out_cloud_xyzsift_model">

                        <sink>CorrespondenceViewer.in_trg_cloud_xyzsift</sink>
		</Source>
                <Source name="SIFTObjectMatcher.out_clustered_correspondences">
                        <sink>CorrespondenceViewer.in_clustered_correspondences</sink>
                </Source>
                <Source name="SIFTObjectMatcher.out_rototranslations">
                        <sink>Projection.in_rototranslations</sink>
                </Source>

                <!-- Projection -->
                <Source name="Projection.out_registered_instances_xyzrgb">
                        <sink>GreedyVerification.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>ConflictGraph.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>GlobalHypothesesVerification.in_aligned_hypotheses_xyzrgb</sink>
                </Source>


			
	</DataStreams>
</Task>




