<?xml version="1.0" ?><Task>
	<!-- reference task information -->
	<Reference>
		<Author>
			<name>Michal Laszkowski</name>
			<link/>
		</Author>
		
		<Description>
                        <brief>SOM:VerificationTest</brief>
			<full/>	
		</Description>
	</Reference>
	
	<!-- task definition -->
	<Subtasks>
		<Subtask name="Main">
			<Executor name="Processing" period="1">
                                <Component bump="0" name="CameraInfo" priority="1" type="CvCoreTypes:CameraInfoProvider">
                                        <param name="camera_matrix">0</param>
                                        <param name="dist_coeffs">0</param>
                                </Component>
                                <Component bump="0" name="SOMJSONReader" priority="2" type="SIFTObjectModel:SOMJSONReader">
                                        <param name="filenames">0</param>
                                </Component>
                                <!--Sequences-->
                                <Component bump="0" name="NextImageTrigger" priority="3" type="CvBasic:Trigger">
                                </Component>
                                <Component bump="0" name="SequenceRGB" priority="4" type="CvBasic:Sequence">
                                    <param name="sequence.directory">0</param>
                                    <param name="sequence.pattern">0</param>
                                    <param name="mode.loop">0</param>
                                    <param name="mode.sort">0</param>
                                    <param name="mode.auto_next_image">0</param>
                                </Component>
                                <Component bump="0" name="SequenceXYZ" priority="5" type="CvBasic:Sequence">
                                    <param name="sequence.directory">0</param>
                                    <param name="sequence.pattern">0</param>
<!--                                    <param name="sequence.pattern">.*\_xyz\.yml</param>-->
                                    <param name="mode.loop">0</param>
                                    <param name="mode.sort">0</param>
                                    <param name="mode.auto_next_image">0</param>
                                </Component>
                                <!--Processing-->
				<Component bump="0" name="SIFT" priority="6" type="CvBasic:CvSIFT">
				</Component>
				<Component bump="0" name="Converter" priority="7" type="PCL:DepthConverter">
				</Component>
				<Component bump="0" name="FeatureCloudConverter" priority="8" type="SIFTObjectModel:FeatureCloudConverter">
				</Component>
				
				<Component bump="0" name="SIFTObjectMatcher" priority="9" type="SIFTObjectModel:SIFTObjectMatcher">
                                    <param name="cg_size">0</param>
                                    <param name="cg_thresh">0</param>
                                </Component>
                                <!-- Detect coordinations -->
                                <Component name="DetectCircles" priority="11" type="CvBasic:CvFindCirclesGrid">
                                        <param name="grid.width">0</param>
                                        <param name="grid.height">0</param>
                                        <param name="grid.size">0</param>
                                </Component>
                                <Component name="DetectCirclesInv" priority="12" type="CvBasic:CvFindCirclesGrid">
                                        <param name="grid.width">0</param>
                                        <param name="grid.height">0</param>
                                        <param name="grid.size">0</param>
                                        <param name="image.inverse">0</param>
                                </Component>
                                <Component name="SolvePNP" priority="13" type="CvBasic:CvSolvePnP">
                                        <param name="offset.x">0</param>
                                        <param name="offset.y">0</param>
                                        <param name="offset.roll">0</param>
                                </Component>
                                <Component name="SolvePNPinv" priority="14" type="CvBasic:CvSolvePnP">
                                        <param name="offset.x">0</param>
                                        <param name="offset.y">0</param>
                                        <param name="offset.roll">0</param>
                                </Component>
                                <Component bump="0" name="SolveLocation" priority="15" type="CvBasic:CalcObjectLocation">
                                </Component>


                                <Component bump="1" name="ReprojectionError" priority="16" type="SIFTObjectModel:ReprojectionError">
                                </Component>

                                <!-- Verification -->
                                <Component bump="1" name="Projection" priority="17" type="SIFTObjectModel:Projection">
                                </Component>
                                <Component bump="1" name="GreedyVerification" priority="18" type="SIFTObjectModel:GreedyVerification">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.0075f</param>
                                </Component>
                                <Component bump="1" name="ConflictGraph" priority="19" type="SIFTObjectModel:ConflictGraph">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.0075f</param>
                                        <param name="support_threshold">0</param>
                                        <param name="penalty_threshold">0</param>
                                        <param name="conflict_threshold">0</param>
                                </Component>
                                <Component bump="1" name="GlobalHypothesesVerification" priority="20" type="SIFTObjectModel:GlobalHypothesesVerification">
                                        <param name="resolution">0.005f</param>
                                        <param name="inlier_treshold">0.0075f</param>
                                        <param name="radius_clutter">0</param>
                                        <param name="regularizer">0</param>
                                        <param name="clutter_regularizer">0</param>
                                </Component>
                        </Executor>

<!--			<Executor name="Visualization" period="1">
                                <Component name="Window" type="SIFTObjectModel:CorrespondencesViewer" priority="1" bump="0">
                                </Component>
                                <Component name="CloudViewer" type="PCL:CloudViewer" priority="2" bump="0">
                                </Component>
                                <Component name="ClustersViewer" type="PCL:ClustersViewer" priority="2" bump="0">
                                    <param name="title">Projections</param>
                                </Component>
                        </Executor>
-->
            </Subtask>
	
	</Subtasks>
	
	<!-- pipes connecting datastreams -->
	<DataStreams>
                <Source name="CameraInfo.out_camera_info">
                        <sink>SolvePNP.in_camerainfo</sink>
                        <sink>SolvePNPinv.in_camerainfo</sink>
                        <sink>Converter.in_camera_info</sink>
                        <sink>FeatureCloudConverter.in_camera_info</sink>
                </Source>
                <!--Sequences-->
                <Source name="NextImageTrigger.out_trigger">
                        <sink>SequenceRGB.in_next_image_trigger</sink>
                        <sink>SequenceXYZ.in_next_image_trigger</sink>
                </Source>
		<Source name="SequenceRGB.out_img">
			<sink>SIFT.in_img</sink>
                        <sink>Converter.in_color</sink>
                        <sink>DetectCircles.in_img</sink>
                        <sink>DetectCirclesInv.in_img</sink>
		</Source>
                <Source name="SequenceXYZ.out_img">
                        <sink>Converter.in_depth</sink> <!--_xyz-->
                        <sink>FeatureCloudConverter.in_depth</sink>
		</Source>
                <!--Proccesing-->
		<Source name="SIFT.out_descriptors">
			<sink>FeatureCloudConverter.in_descriptors</sink>	
		</Source>
		<Source name="SIFT.out_features">
			<sink>FeatureCloudConverter.in_features</sink>	
		</Source>		
		<Source name="Converter.out_cloud_xyzrgb">
			<sink>SIFTObjectMatcher.in_cloud_xyzrgb</sink>		
		</Source>
		<Source name="FeatureCloudConverter.out_cloud_xyzsift">
			<sink>SIFTObjectMatcher.in_cloud_xyzsift</sink>	
		</Source>
                <!--Read model-->
                <Source name="SOMJSONReader.out_models">
			<sink>SIFTObjectMatcher.in_models</sink>
                </Source>

                <!-- SIFTObjectMatcher -->
                <Source name="SIFTObjectMatcher.out_cloud_xyzrgb">
                        <sink>Projection.in_cloud_xyzrgb_scene</sink>
                        <sink>GreedyVerification.in_cloud_xyzrgb_scene</sink>
                        <sink>ConflictGraph.in_cloud_xyzrgb_scene</sink>
                        <sink>GlobalHypothesesVerification.in_cloud_xyzrgb_scene</sink>
                </Source>
                <Source name="SIFTObjectMatcher.out_cloud_xyzrgb_model">
                        <sink>Projection.in_cloud_xyzrgb_model</sink>
                </Source>

                <Source name="SIFTObjectMatcher.out_rototranslations">
                        <sink>Projection.in_rototranslations</sink>
                </Source>

<!--            <Source name="ProjectionGrouping.out_homogMatrix">
                </Source>-->
                <!-- Detect coordinations -->
                <Source name="DetectCircles.out_pattern">
                        <sink>SolvePNP.in_object3d</sink>
                </Source>
                <Source name="DetectCirclesInv.out_pattern">
                        <sink>SolvePNPinv.in_object3d</sink>
                </Source>
                <Source name="SolvePNPinv.out_homogMatrix">
                        <sink>SolveLocation.in_homogMatrix</sink>
                </Source>
                <Source name="SolvePNP.out_homogMatrix">
                        <sink>SolveLocation.in_homogMatrix</sink>
                </Source>


                <Source name="SolveLocation.out_homogMatrix">
                        <sink>ReprojectionError.in_location_hm</sink>
                </Source>

                <!-- Projection -->
                <Source name="Projection.out_registered_instances_xyzrgb">
                        <sink>GreedyVerification.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>ConflictGraph.in_aligned_hypotheses_xyzrgb</sink>
                        <sink>GlobalHypothesesVerification.in_aligned_hypotheses_xyzrgb</sink>
                </Source>


			
	</DataStreams>
</Task>